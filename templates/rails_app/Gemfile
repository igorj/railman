source 'https://rubygems.org'

gem 'dotenv-rails', '2.1.1', require: 'dotenv/rails-now' # load ENV from .env

gem 'rails', '4.2.6'
gem 'pg', '0.18.2'

gem 'sass-rails', '~> 5.0'
gem 'uglifier', '>= 1.3.0'
gem 'coffee-rails', '~> 4.1.0'
gem 'jquery-rails'
gem 'turbolinks'
gem 'jquery-turbolinks'

gem 'bootstrap-sass', '3.3.4.1'
gem 'bootstrap_form', '2.3.0'    # form helper for twitter bootstrap
gem 'bootstrap-datepicker-rails', '1.4.0'     # bootstrap-datepicker
gem 'active_link_to', '1.0.3'    # automatically mark navigation link as active

gem 'dalli'   # memcached client
gem 'kgio'    # gives dalli 20-30% performance boost

# todo add sidekiq for backgroud jobs

gem 'unicorn', '4.8.3'  # use unicorn as production server
gem 'unicorn-rails', '1.1.0'  # use unicorn as local server

# capistrano deployment
gem 'capistrano', '3.1.0'
gem 'capistrano-rails', '1.1.1'
gem 'capistrano-rbenv', '2.0.2'
gem 'capistrano-bundler', '1.1.2'

gem 'exception_notification', '4.1.2' # exception notification per email

group :development do
  gem 'better_errors'   # better error pages in development
  gem 'binding_of_caller'   # repl on the error page
  gem 'spring'    # Spring speeds up development by keeping your application running in the background
  gem 'quiet_assets'    # less noise in development log
  # gem 'rack-mini-profiler'
  # gem 'flamegraph'    # mini-profiler flamegraph extension (?pp=flamegraph)
end

group :test do
  gem 'minitest-reporters', '1.1.7'   # generate xml for jenkins
  gem 'simplecov', require: false     # generate coverage reports
  gem 'simplecov-rcov', '0.2.3', require: false   # generate coverage reports for jenkins
  gem 'capybara', '2.6.0'   # dsl for browser tests
  gem 'capybara_minitest_spec', '1.0.5'   # capybara rspec-style matchers (must_have...)
  gem 'selenium-webdriver', '2.49.0'      # use real browser for webtests
  gem 'poltergeist', '1.8.1'      # headless tests with phantom.js
end

# put additional application-specific gems to Gemfile.local
local_gemfile = File.join(File.dirname(__FILE__), "Gemfile.local")
eval_gemfile(local_gemfile) if File.exists?(local_gemfile)

